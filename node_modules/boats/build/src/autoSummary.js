"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const lodash_1 = require("lodash");
const upath_1 = require("upath");
const getMethodFromFileName_1 = tslib_1.__importDefault(require("./utils/getMethodFromFileName"));
const summaryVerbReplacements = {
    get: 'Get',
    post: 'Create a',
    put: 'Update a',
    patch: 'Update part of a',
    delete: 'Delete a'
};
const isVar = (part) => {
    return part.includes('{');
};
exports.default = (filePath) => {
    const parts = filePath.split(upath_1.sep);
    // @ts-ignore
    const method = summaryVerbReplacements[getMethodFromFileName_1.default(parts.pop())];
    let out = `${lodash_1.upperFirst(method)}`;
    if (!parts.length) {
        return out;
    }
    parts.reverse();
    for (let i = 0; i < parts.length; i++) {
        const first = i === 0;
        if (isVar(parts[i])) {
            //
            const variable = parts[i];
            ++i;
            const word = parts[i];
            if (first) {
                out += ` ${word} based on ${variable}`;
            }
            else {
                out += `, from ${word} ${variable}`;
            }
        }
        else {
            if (first) {
                out += ' ' + parts[i];
            }
            else {
                out += ', from ' + parts[i];
            }
        }
    }
    return out;
};
