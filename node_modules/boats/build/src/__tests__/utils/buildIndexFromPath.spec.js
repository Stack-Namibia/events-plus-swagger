"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const buildIndexFromPath_1 = tslib_1.__importDefault(require("../../utils/buildIndexFromPath"));
describe('glob check', () => {
    it('it does dumb pluralization without trim', () => {
        expect(buildIndexFromPath_1.default('university/model.yml')).toEqual('UniversityModel');
        expect(buildIndexFromPath_1.default('university/models.yml')).toEqual('UniversityModels');
    });
    it('it does dumb pluralization with trim', () => {
        expect(buildIndexFromPath_1.default('university/model.yml', 'Model')).toEqual('University');
        expect(buildIndexFromPath_1.default('university/models.yml', 'Model')).toEqual('Universitys');
    });
    it('it does fancy pluralization with trim', () => {
        expect(buildIndexFromPath_1.default('university/model.yml', 'Model', true)).toEqual('University');
        expect(buildIndexFromPath_1.default('university/models.yml', 'Model', true)).toEqual('Universities');
    });
    it('it does fancy pluralization with trim, adding an extra "s" when needed', () => {
        expect(buildIndexFromPath_1.default('sheep/model.yml', 'Model', true)).toEqual('Sheep');
        expect(buildIndexFromPath_1.default('sheep/models.yml', 'Model', true)).toEqual('Sheeps');
    });
    it('it does fancy pluralization with trim when name ends with "s"', () => {
        expect(buildIndexFromPath_1.default('address/model.yml', 'Model', true)).toEqual('Address');
        expect(buildIndexFromPath_1.default('address/models.yml', 'Model', true)).toEqual('Addresses');
    });
    it('drops basename when in trimOpts', () => {
        expect(buildIndexFromPath_1.default('cool/weather/weather.yml', { dropBaseName: true })).toEqual('CoolWeather');
        expect(buildIndexFromPath_1.default('cool/weather/weather.yml', { dropBaseName: true }, true)).toEqual('CoolWeather');
    });
});
